#!/usr/bin/python3

#############################################################################
# import часть # 
#############################################################################

import random
import sys
import os
import shutil

#############################################################################
# Часть списков слов для припева # 
#############################################################################

word_1 = ["Солнечный", "Траурный", "Плюшевый", "Бешеный", "Памятный",
          "Трепетный", "Базовый", "Скошенный", "Преданный", "Ласковый",
          "Пойманный", "Радужный", "Огненный", "Радостный", "Тензорный",
          "Шёлковый", "Пепельный", "Ламповый", "Жареный", "Загнанный"] 

word_2 = ["зайчик", "Верник", "глобус", "ветер", "щавель", "пёсик",
          "копчик", "ландыш", "стольник", "мальчик", "дольщик", "Игорь",
          "невод", "егерь", "пончик", "лобстер", "жемчуг", "кольщик",
          "йогурт", "овод"] 

word_3 = ["стеклянного", "ванильного", "резонного", "широкого", "дешёвого",
          "горбатого", "собачьего", "исконного", "волшебного", "картонного",
          "лохматого", "арбузного", "огромного", "запойного", "великого",
          "бараньего", "вандального", "едрёного", "парадного", "укромного"]

word_4 = ["глаза", "плова", "Пельша", "мира", "деда", "жира", "мема",
          "ада", "бура", "жала", "нёба", "гунна", "хлама", "шума",
          "воза", "сала", "фена", "зала", "рака", "макдака"]

#############################################################################
# Часть функций # 
#############################################################################
list_of_lists = ["filler", word_1, word_2, word_3, word_4]
## Основное меню


def menu():
    print("\nДля создания припева, введите 1")
    print("Для добавления своих слов, введите 2")
    print("Для удаления слов, введите 3")
    print("Для сброса слов к исходному состоянию, введите 4")
    print("Для выхода, введите 5")

    choice_menu = input("\nВведите пункт меню: ")

    if choice_menu == "1":
        my_defense(word_1, word_2, word_3, word_4)
    elif choice_menu == "2":
        add_words()
    elif choice_menu == "3":
        del_words()
    elif choice_menu == "4":
        reset_all()
    elif choice_menu == "5":
        sys.exit()
    elif choice_menu == "sosi hui":
        print("sam sosi")
        menu()
    else:
        input("\nТакого варианта ответа нет, нажмите, чтобы вернуться к выбору\n")
        menu()


## Создание припева


def my_defense(word_1, word_2, word_3, word_4): 
    try: # Проверяем списки на пустоту
        print("\nОооо, моя оборона\n" + random.choice(word_1) + " " +
              random.choice(word_2) + " "  + random.choice(word_3) +
              " "  + random.choice(word_4))
        print("Оооо, моя оборона\n" + random.choice(word_1) + " " +
              random.choice(word_2) + " "  + random.choice(word_3) +
              " "  + random.choice(word_4))
        menu()
    except IndexError:
        shutil.rmtree("files")
        my_defense(word_1, word_2, word_3, word_4)


## Меню добавления слов припева


def add_words_func(path):
    add_var = input("\nВведите слово: ") # Пользователь вводит свое слово
    with open(path, "a") as f: # Открываем файл с пользовательскими словами на дозапись
        f.write(add_var) # Записываем слово пользователя в файл
        f.write("\n") # Переходим на новую строку для правильного считывания
    add_words() # Возврат к добавлению слов


def add_words():

    print("\nДля добавления первого слова припева, введите 1")
    print("Для добавления второго слова припева, введите 2")
    print("Для добавления третьего слова припева, введите 3")
    print("Для добавления четвертого слова припева, введите 4")
    print("Чтобы вернуться в главное меню, введите 5")

    choice_add_words = input("\nВыберите пункт меню: ")

    for i in range(1, 5):
        if choice_add_words == str(i):
            check_for_files(f"files/add_word_{i}")
            add_words_func(f"files/add_word_{i}")
            break

    if choice_add_words == "5":
        menu() # Возвращаемся в меню
        pass
    else:
        input("\n" + "Такого варианта ответа нет, нажмите, чтобы вернуться к выбору" + "\n")
        add_words()


## Меню удаления слов припева


def del_words_func(path, num_of_list, choice_del_words):
    print(f"\nСписок слов для {choice_del_words}-го слова припева: ")
    print(num_of_list) # Выводим список слов для удобства пользователя
    print("\nСлова надо вводить так же, как они написаны в списке, регистр важен, скобки и кавычки не нужны\n")
    del_var = input("Введите слово: ") # Пользователь вводит слово для удаления
    try: # Проверяем наличие этого слова в списке, если его нет, бросается исключение, пользователь возвращается в меню выбора списка для удаления слова
        num_of_list.remove(del_var) # Удаляем слово из списка для текущего сеанса
        with open(path, "a") as f: # Открываем файл со словами для удаления на дозапись
            f.write(del_var) # Записываем слово пользователя в файл
            f.write("\n") # Переходим на новую строку для правильного считывания
        del_words() # Возвращаемся к удалению слов
    except ValueError:
        print("\nТакого слова нет, проверьте правильность введенного слова\n")
        del_words()


def del_words():

    print("\nДля удаления первого слова припева, введите 1")
    print("Для удаления второго слова припева, введите 2")
    print("Для удаления третьего слова припева, введите 3")
    print("Для удаления четвертого слова припева, введите 4")
    print("Чтобы вернуться в главное меню, введите 5")

    choice_del_words = input("\nВыберите пункт меню: ")

    for i in range(1, 5):
        if choice_del_words == str(i):
            check_for_files(f"files/del_word_{i}")
            del_words_func(f"files/del_word_{i}", list_of_lists[i], choice_del_words)
            break

    if choice_del_words == "5":
        menu() # Возвращаемся в меню
        pass
    else:
        input("\n" + "Такого варианта ответа нет, нажмите, чтобы вернуться к выбору" + "\n")
        del_words()

## Сброс всех слов к исходному состоянию

def reset_all():
    if os.path.exists("files"):
        shutil.rmtree("files")
        if not os.path.exists("files"):
            print("Очистка слов выполнена успешно")
        elif os.path.exists("files"):
            print("Ошибка очистки слов")
        menu()
    else:
        print("Слова уже в исходном состоянии")
        input("\nНажмите любую кнопку, чтобы перейти в меню")
        menu()

#############################################################################
# init часть, инициализируются пользовательские слова, проводятся проверки # 
#############################################################################

## Считываем пользовательские слова из файлов и добавляем их в списки

def check_for_files(add_path = "", del_path = ""):
    if not os.path.exists("files"):
        os.mkdir("files")
    if not os.path.exists(add_path) and add_path != "":
        with open(add_path, "w") as f:
            pass
    if not os.path.exists(del_path) and del_path != "":
        with open(del_path, "w") as f:
            pass

def init_user_words(add_path, del_path, num_of_list):
    if os.path.exists(add_path):
        with open(add_path) as f: # Открываем файл с пользовательскими словами на чтение
            for line in f: # Идем построчно по файлу с пользовательскими словами
                num_of_list.append(line.rstrip()) # Добавляем слова в списки слов припева
    if os.path.exists(del_path):
        with open(del_path) as f: # Открываем файл с пользовательскими словами на чтение
            for line in f: # Идем построчно по файлу с пользовательскими словами
                num_of_list.remove(line.rstrip()) # Удаляем слова из списков слов припева с удалением пустых строк

for i in range (1, 5):
    init_user_words(f"files/add_word_{i}", f"files/del_word_{i}", list_of_lists[i])
    print(list_of_lists[i])

# TODO: отмена удаления и добавления слов

#############################################################################
# Вызываем пользовательский интерфейс #
#############################################################################

menu()